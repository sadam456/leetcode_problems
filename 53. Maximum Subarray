class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int sum=0, max_sum=INT_MIN;
        for(int i=0;i<nums.size();i++){
            sum+=nums[i];
            if(sum>max_sum){
            max_sum=sum;
            }
            if(sum<0){
             sum=0; 
            }
        }
        return max_sum;
    }
};
//explanation:
nums = [-2,1,-3,4,-1,2,1,-5,4]
for loop:1
 sum=-2, max_sum=-2,
 and the new sum=0 because upto -2 the max_sum is -2 which is negative so reassing it to 0
 
for loop:2
  sum =1, max_sum=1,

for loop:3
  sum=-2, max_sum=1;
  and the new sum=0 beacuse upto -3 is -2 for the subarray[1,-3] which is neagative so reassing it to 0
  
trace for other values.........................
here we are not bothering about which subarray the max_sum consists, we are just finding the max_sum of the array which is contigious.
  
 
 
