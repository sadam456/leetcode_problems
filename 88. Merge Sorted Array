class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        
        int i=m-1;
        int j=n-1;
        int k=m+n-1;
        while(i>=0&&j>=0){
            if(nums1[i]>nums2[j]){
                nums1[k]=nums1[i];
                i--;
                k--;
            }
            else{
               nums1[k]=nums2[j];
                j--;
                k--;
             }
        }
        while(j>=0){
            nums1[k]=nums2[j];
            j--;
            k--;
        }
    }
};
//explanation
THREE POINTER/REVERSE SORTING

TC: O(M+N)
SC: O(1)
nums1 has n+m elements
We are assigning 3 pointers ptr1 at end of elements nums1 (at m) ptr2 at end of nums2, ptr3 at end of nums1 (at n+m)
We compare ptr1 and ptr2:
if nums1[ptr1]>nums2[ptr2] then nums1[ptr3]=nums1[ptr1] , ptr1-- , ptr3--
Similarly if nums2[ptr2]>nums1[ptr1]
If elements in nums2 remain we put them in nums2 using ptr3
